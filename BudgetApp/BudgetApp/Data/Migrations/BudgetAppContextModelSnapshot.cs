// <auto-generated />
using System;
using BudgetApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetApp.Data.Migrations
{
    [DbContext(typeof(BudgetAppContext))]
    partial class BudgetAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BudgetApp.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"), 1L, 1);

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccountID");

                    b.HasIndex("UserId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("BudgetApp.Models.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BudgetMonth")
                        .HasColumnType("int");

                    b.Property<int>("BudgetYear")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("BudgetId");

                    b.HasIndex("AccountId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Budget");
                });

            modelBuilder.Entity("BudgetApp.Models.CategoryModels.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryTypeId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("CategoryTypeId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Fast overførsel",
                            CategoryTypeId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Penge tilbage",
                            CategoryTypeId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Anden overførsel",
                            CategoryTypeId = 1
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Bolig",
                            CategoryTypeId = 2
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Bil",
                            CategoryTypeId = 2
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Forsikring",
                            CategoryTypeId = 2
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Tlf/Internet/TV",
                            CategoryTypeId = 2
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Streaming",
                            CategoryTypeId = 2
                        });
                });

            modelBuilder.Entity("BudgetApp.Models.CategoryModels.CategoryType", b =>
                {
                    b.Property<int>("CategoryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryTypeId"), 1L, 1);

                    b.Property<string>("CategoryTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryTypeId");

                    b.ToTable("CategoryType");

                    b.HasData(
                        new
                        {
                            CategoryTypeId = 1,
                            CategoryTypeName = "Income"
                        },
                        new
                        {
                            CategoryTypeId = 2,
                            CategoryTypeName = "Expense"
                        });
                });

            modelBuilder.Entity("BudgetApp.Models.CategoryModels.Subcategory", b =>
                {
                    b.Property<int>("SubcategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubcategoryId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SubcategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubcategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategory");
                });

            modelBuilder.Entity("BudgetApp.Models.CSV_loader.CSV_model", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivingAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("SendingAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineId");

                    b.ToTable("CSV_model");
                });

            modelBuilder.Entity("BudgetApp.Models.DimDate", b =>
                {
                    b.Property<DateTime>("DateISO")
                        .HasColumnType("datetime2");

                    b.Property<int>("DanishDayOfWeekInt")
                        .HasColumnType("int");

                    b.Property<string>("DateDK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateNordea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DayInt")
                        .HasColumnType("int");

                    b.Property<string>("DayNameDK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayNameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthInt")
                        .HasColumnType("int");

                    b.Property<int>("QuarterInt")
                        .HasColumnType("int");

                    b.Property<int>("WeekInt")
                        .HasColumnType("int");

                    b.Property<int>("YearInt")
                        .HasColumnType("int");

                    b.HasKey("DateISO");

                    b.ToTable("DimDate");
                });

            modelBuilder.Entity("BudgetApp.Models.Trans", b =>
                {
                    b.Property<int>("TransId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("TransId");

                    b.HasIndex("AccountId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Trans");
                });

            modelBuilder.Entity("BudgetApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("UserAlias")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BudgetApp.Models.Account", b =>
                {
                    b.HasOne("BudgetApp.Models.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgetApp.Models.Budget", b =>
                {
                    b.HasOne("BudgetApp.Models.Account", "Account")
                        .WithMany("Budgets")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetApp.Models.CategoryModels.Subcategory", "Subcategory")
                        .WithMany("Budgets")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("BudgetApp.Models.CategoryModels.Category", b =>
                {
                    b.HasOne("BudgetApp.Models.CategoryModels.CategoryType", "CategoryType")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryType");
                });

            modelBuilder.Entity("BudgetApp.Models.CategoryModels.Subcategory", b =>
                {
                    b.HasOne("BudgetApp.Models.CategoryModels.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BudgetApp.Models.Trans", b =>
                {
                    b.HasOne("BudgetApp.Models.Account", "Account")
                        .WithMany("Trans")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetApp.Models.CategoryModels.Subcategory", "Subcategory")
                        .WithMany("Trans")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("BudgetApp.Models.Account", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Trans");
                });

            modelBuilder.Entity("BudgetApp.Models.CategoryModels.Category", b =>
                {
                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("BudgetApp.Models.CategoryModels.CategoryType", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("BudgetApp.Models.CategoryModels.Subcategory", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Trans");
                });

            modelBuilder.Entity("BudgetApp.Models.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
